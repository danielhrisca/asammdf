name: tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4

        with:
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        shell: bash
        run: |
            pip install tox tox-gh-actions
            if [ "$RUNNER_OS" == "Linux" ]; then
               sudo apt update
               sudo apt-get install libegl1 libopengl0
               sudo apt-get install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
               sudo apt-get install libxcb-xinerama0
               sudo apt-get install libxkbcommon-x11-0
               sudo apt-get install xorg
               sudo apt-get install -y xvfb
            fi

      - name: Start Xvfb
        if: matrix.os == 'ubuntu-22.04'
        run: |
            Xvfb :0 -screen 0 1024x768x24 > /dev/null 2>&1 &
            export DISPLAY=:0
            
      # see: https://github.com/ymyzk/tox-gh-actions
      - name: Run tests
        run: tox

      - name: Stop Xvfb
        if: matrix.os == 'ubuntu-22.04'
        run: killall Xvfb

      - name: Publish Style Summary
        if: ${{ failure() || success() }}
        run: |
          python -c "from ci import report_style; report_style()"

      - name: Publish Tests Summary
        if: ${{ failure() || success() }}
        run: |
          pip install junitparser
          python -c "from ci import report_tests; report_tests(header='## Unit-tests Report:')"
        
