[build-system]
requires = ["scikit-build-core", "numpy"]
build-backend = "scikit_build_core.build"

[project]
name = "asammdf"
description="ASAM MDF measurement data file parser"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "LGPLv3+" }
authors = [{ name = "Daniel Hrisca", email = "daniel.hrisca@gmail.com" }]
dynamic = ["version"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = [
    "read",
    "reader",
    "edit",
    "editor",
    "parse",
    "parser",
    "asam",
    "mdf",
    "measurement",
]
dependencies = [
    "canmatrix[arxml,dbc]>=1.0",
    "isal; platform_machine == 'x86_64' or platform_machine == 'AMD64'",
    "lxml>=4.9.3",
    "lz4",
    "numexpr",
    "numpy>=1.23.0",
    "pandas",
    "python-dateutil",
    "typing-extensions",
]

[project.optional-dependencies]
decode = ["faust-cchardet==2.1.19", "chardet"]
export = [
    "pyarrow",
    "h5py",
    "hdf5storage>=0.1.19",
    "python-snappy",
]
export_matlab_v5 = ["scipy"]
gui = [
    "natsort",
    "PySide6",
    "pyqtgraph",
    "pyqtlet2",
    "packaging",
    "QtPy",
]
encryption = ["cryptography", "keyring"]
symbolic_math = ["sympy"]
filesystem = ["fsspec"]

[project.scripts]
asammdf = "asammdf.app.asammdfgui:main [gui]"

[project.urls]
Documentation = "https://asammdf.readthedocs.io/en/master"
Issues = "https://github.com/danielhrisca/asammdf/issues"
Source = "https://github.com/danielhrisca/asammdf"

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.regex"
metadata.version.input = "src/asammdf/version.py"
wheel.packages = ["src/asammdf"]
wheel.py-api = "cp39"

[tool.black]
line-length = 120
required-version = "24"
target-version = ['py39']
force-exclude = '''
^/src/asammdf/gui/ui
'''

[tool.coverage.run]
source = ["asammdf"]
omit = ["*/asammdf/gui/ui/*"]

[tool.cibuildwheel]
manylinux-x86_64-image = "manylinux_2_28"
test-requires = "pytest"
test-command = "pytest {project}/test"
build-frontend = "build"
archs = ["auto64"]                        # only build for 64bit architectures
# skip pypy and irrelevant architectures
skip = ["pp*", "*_ppc64le", "*-musllinux*", "*_s390x"]

[tool.ruff]
target-version = "py39"
extend-exclude = ["./src/asammdf/gui/ui"]
force-exclude = true

[tool.ruff.lint]
select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "F",   # pyflakes
    "UP",  # pyupgrade
    "I",   # isort
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # Ruff-specific rules
]
ignore = [
    "B007",    # unused-loop-control-variable
    "F841",    # unused-variable
    "PLC0414", # useless-import-alias
    "PLR09",   # too-many-this, too-many-that
    "PLR2004", # magic-value-comparison
    "PLR5501", # collapsible-else-if
    "PLW0603", # global-statement
    "PLW2901", # redefined-loop-name
    "RUF012",  # mutable-class-default
    "RUF015",  # unnecessary-iterable-allocation-for-first-element
]

[tool.ruff.lint.isort]
known-first-party = ["asammdf"]
order-by-type = false
force-sort-within-sections = true
